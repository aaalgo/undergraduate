HIF003
--
-- Copyright (C) 1988-2001 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	dec.vhd
	{
		dec [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			43 [] [];
		}
	}
	altrom.tdf
	{
		altrom [USE_LPM_FOR_AHDL_OPERATORS,WIDTH,AD_WIDTH,NUMWORDS,FILE,REGISTERINPUTMODE=DEFAULT,DEVICE_FAMILY] [aglobal.inc,lpm_mux.inc,lpm_decode.inc,memmodes.inc]
		{
			31 [DEVICE_FAMILY=FLEX10K,REGISTERINPUTMODE=DEFAULT,FILE=rom.mif,NUMWORDS=256,AD_WIDTH=8,WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,Address7,Address6,Address5,Address4,Address3,Address2,Address1,Address0];
			55 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=16,AD_WIDTH=10,NUMWORDS=1024,FILE=rom.mif,REGISTERINPUTMODE=DEFAULT,DEVICE_FAMILY=FLEX10K] [Address0,Address1,Address2,Address3,Address4,Address5,Address6,Address7,Address8,Address9,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15];
			57 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=16,AD_WIDTH=9,NUMWORDS=512,FILE=rom.mif,REGISTERINPUTMODE=DEFAULT,DEVICE_FAMILY=FLEX10K] [Address0,Address1,Address2,Address3,Address4,Address5,Address6,Address7,Address8,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q8,Q9,Q10,Q11,Q12,Q13,Q14,Q15];
		}
	}
	lpm_rom.tdf
	{
		lpm_rom [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_WIDTHAD,LPM_NUMWORDS,LPM_ADDRESS_CONTROL=REGISTERED,LPM_OUTDATA=REGISTERED,LPM_FILE,DEVICE_FAMILY] [aglobal.inc,altrom.inc]
		{
			30 [DEVICE_FAMILY=FLEX10K,LPM_FILE=rom.mif,LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_WIDTHAD=8,LPM_WIDTH=16,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15,address0,address1,address2,address3,address4,address5,address6,address7];
			54 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=16,LPM_WIDTHAD=10,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_OUTDATA=UNREGISTERED,LPM_FILE=rom.mif,DEVICE_FAMILY=FLEX10K] [address9,address8,address7,address6,address5,address4,address3,address2,address1,address0,q15,q14,q13,q12,q11,q10,q9,q8,q7,q6,q5,q4,q3,q2,q1,q0];
			56 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=16,LPM_WIDTHAD=9,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_OUTDATA=UNREGISTERED,LPM_FILE=rom.mif,DEVICE_FAMILY=FLEX10K] [address8,address7,address6,address5,address4,address3,address2,address1,address0,q15,q14,q13,q12,q11,q10,q9,q8,q7,q6,q5,q4,q3,q2,q1,q0];
		}
	}
	rom.vhd
	{
		rom [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			42 [] [];
		}
	}
	alu.vhd
	{
		alu [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9092257.DLS,U5125632.DLS]
		{
			41 [] [];
		}
	}
	acc.vhd
	{
		acc [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			40 [] [];
		}
	}
	count_6.vhd
	{
		count_6 [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9092257.DLS,U5125632.DLS]
		{
			39 [] [];
		}
	}
	yima_7seg.vhd
	{
		yima_7seg [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			38 [] [];
		}
	}
	scan_disp.vhd
	{
		scan_disp [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			34 [] [];
		}
	}
	io.vhd
	{
		io [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			33 [] [];
		}
	}
	declut.tdf
	{
		declut [LATENCY,TOT_LEVELS,STAGE,width,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,bypassff.inc]
		{
			16 [LATENCY=0,TOT_LEVELS=1,STAGE=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable];
		}
	}
	lpm_decode.tdf
	{
		lpm_decode [DEVICE_FAMILY,CASCADE_CHAIN=MANUAL,LPM_PIPELINE=0,LPM_DECODES,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [declut.inc,altshift.inc,lpm_compare.inc,lpm_constant.inc,aglobal.inc]
		{
			15 [DEVICE_FAMILY=FLEX10K,CASCADE_CHAIN=IGNORE,LPM_PIPELINE=0,LPM_DECODES=8,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [eq7,eq6,eq5,eq4,eq3,eq2,eq1,eq0,data2,data1,data0,enable];
		}
	}
	muxlut.tdf
	{
		muxlut [CASCADE_CHAIN,LOCAL=0,REM_LATENCY,LATENCY,TOT_LEVELS,LEVEL,SIZE,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,altshift.inc]
		{
			14 [CASCADE_CHAIN=IGNORE,LOCAL=1,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=2,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data1,data0,select0];
			13 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=0,SIZE=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data3,data2,data1,data0,select1,select0];
			12 [CASCADE_CHAIN=IGNORE,LOCAL=0,LATENCY=0,TOT_LEVELS=2,LEVEL=1,SIZE=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result,data7,data6,data5,data4,data3,data2,data1,data0,select2,select1,select0];
		}
	}
	bypassff.tdf
	{
		bypassff [WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			10 [WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q2,d2,d1,d0];
		}
	}
	lpm_mux.tdf
	{
		lpm_mux [LPM_PIPELINE=0,LPM_WIDTHS,LPM_SIZE,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [muxlut.inc,bypassff.inc,altshift.inc]
		{
			9 [LPM_PIPELINE=0,LPM_WIDTHS=3,LPM_SIZE=8,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7_7,data7_6,data7_5,data7_4,data7_3,data7_2,data7_1,data7_0,data6_7,data6_6,data6_5,data6_4,data6_3,data6_2,data6_1,data6_0,data5_7,data5_6,data5_5,data5_4,data5_3,data5_2,data5_1,data5_0,data4_7,data4_6,data4_5,data4_4,data4_3,data4_2,data4_1,data4_0,data3_7,data3_6,data3_5,data3_4,data3_3,data3_2,data3_1,data3_0,data2_7,data2_6,data2_5,data2_4,data2_3,data2_2,data2_1,data2_0,data1_7,data1_6,data1_5,data1_4,data1_3,data1_2,data1_1,data1_0,data0_7,data0_6,data0_5,data0_4,data0_3,data0_2,data0_1,data0_0,sel2,sel1,sel0];
		}
	}
	altdpram.tdf
	{
		altdpram [DEVICE_FAMILY,USE_EAB=ON,OUTDATA_ACLR=ON,OUTDATA_REG=UNREGISTERED,RDCONTROL_ACLR=ON,RDCONTROL_REG=OUTCLOCK,RDADDRESS_ACLR=ON,RDADDRESS_REG=OUTCLOCK,WRCONTROL_ACLR=ON,WRCONTROL_REG=INCLOCK,WRADDRESS_ACLR=ON,WRADDRESS_REG=INCLOCK,INDATA_ACLR=ON,INDATA_REG=INCLOCK,LPM_FILE=NO_FILE,FILE=NO_FILE,NUMWORDS,WIDTHAD,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,a_hdffe.inc,aglobal.inc]
		{
			8 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,OUTDATA_ACLR=ON,OUTDATA_REG=UNREGISTERED,RDCONTROL_ACLR=ON,RDCONTROL_REG=UNREGISTERED,RDADDRESS_ACLR=ON,RDADDRESS_REG=UNREGISTERED,WRCONTROL_ACLR=ON,WRCONTROL_REG=INCLOCK,WRADDRESS_ACLR=ON,WRADDRESS_REG=INCLOCK,INDATA_ACLR=ON,INDATA_REG=INCLOCK,LPM_FILE=NO_FILE,FILE=NO_FILE,NUMWORDS=8,WIDTHAD=3,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [q7,q6,q5,q4,q3,q2,q1,q0,wren,data7,data6,data5,data4,data3,data2,data1,data0,wraddress2,wraddress1,wraddress0,inclock,rdaddress2,rdaddress1,rdaddress0];
		}
	}
	lpm_ram_dp.tdf
	{
		lpm_ram_dp [DEVICE_FAMILY,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_RDADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altdpram.inc,lpm_mux.inc,lpm_decode.inc,aglobal.inc]
		{
			7 [DEVICE_FAMILY=FLEX10K,LPM_FILE=NO_FILE,LPM_OUTDATA=UNREGISTERED,LPM_WRADDRESS_CONTROL=REGISTERED,LPM_RDADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=3,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [wraddress0,wraddress1,wraddress2,rdaddress0,rdaddress1,rdaddress2,data0,data1,data2,data3,data4,data5,data6,data7,q0,q1,q2,q3,q4,q5,q6,q7,wrclock,wren];
		}
	}
	ram.vhd
	{
		ram [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U3031072.DLS,U1546459.DLS]
		{
			48 [] [];
		}
	}
	altshift.tdf
	{
		altshift [USE_LPM_FOR_AHDL_OPERATORS,WIDTH=4,DEPTH=0] []
		{
			37 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=11,DEPTH=0] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data10,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			28 [DEPTH=0,WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			23 [DEPTH=0,WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,data2,data1,data0];
			11 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
			5 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			4 [DEPTH=0,WIDTH=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,data9,data8,data7,data6,data5,data4,data3,data2,data1,data0];
			46 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=2,DEPTH=0] [data0,data1,result0,result1];
		}
	}
	addcore.tdf
	{
		addcore [USE_LPM_FOR_AHDL_OPERATORS,width,CONSTANT_CIN,CARRY_CHAIN,CARRY_CHAIN_LENGTH,DEVICE_FAMILY] [aglobal.inc,addcore.inc]
		{
			36 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=11,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [result10,result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa10,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab10,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			27 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			22 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result2,result1,result0,dataa2,dataa1,dataa0,datab2,datab1,datab0,cin];
			3 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result9,result8,result7,result6,result5,result4,result3,result2,result1,result0,dataa9,dataa8,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab9,datab8,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			45 [USE_LPM_FOR_AHDL_OPERATORS=OFF,width=2,CONSTANT_CIN=0,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K] [cin,datab0,datab1,dataa0,dataa1,result0,result1];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=NO,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY,STYLE] [aglobal.inc,altshift.inc,bypassff.inc,look_add.inc,addcore.inc,lpm_add_sub.inc]
		{
			35 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=11,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [RESULT10,RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB10,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA10,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			26 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=9,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,cin,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			21 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=3,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT2,RESULT1,RESULT0,CIN,DATAB2,DATAB1,DATAB0,DATAA2,DATAA1,DATAA0];
			2 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=10,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT9,RESULT8,RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB9,DATAB8,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA9,DATAA8,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			44 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=2,LPM_REPRESENTATION=SIGNED,LPM_DIRECTION=DEFAULT,ONE_INPUT_IS_CONSTANT=YES,LPM_PIPELINE=0,MAXIMIZE_SPEED=5,OPTIMIZE_FOR_SPEED=5,CARRY_CHAIN=IGNORE,CARRY_CHAIN_LENGTH=32,DEVICE_FAMILY=FLEX10K,STYLE=NORMAL] [DATAA0,DATAA1,DATAB0,DATAB1,CIN,RESULT0,RESULT1];
		}
	}
	pc.vhd
	{
		pc [width=10] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9092257.DLS,U5125632.DLS]
		{
			47 [width=10] [];
		}
	}
	lpm_ram_dq.tdf
	{
		lpm_ram_dq [USE_LPM_FOR_AHDL_OPERATORS,LPM_WIDTH,LPM_WIDTHAD,LPM_NUMWORDS,LPM_INDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_OUTDATA=REGISTERED,LPM_FILE=NO_FILE,DEVICE_FAMILY] [aglobal.inc,lpm_decode.inc,lpm_mux.inc,altram.inc]
		{
			49 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_WIDTHAD=7,LPM_NUMWORDS=0,LPM_INDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_OUTDATA=REGISTERED,LPM_FILE=NO_FILE,DEVICE_FAMILY=FLEX10K] [DATA7,DATA6,DATA5,DATA4,DATA3,DATA2,DATA1,DATA0,ADDRESS6,ADDRESS5,ADDRESS4,ADDRESS3,ADDRESS2,ADDRESS1,ADDRESS0,INCLOCK,OUTCLOCK,WE,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0];
			50 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_WIDTHAD=6,LPM_NUMWORDS=0,LPM_INDATA=REGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_OUTDATA=UNREGISTERED,LPM_FILE=NO_FILE,DEVICE_FAMILY=FLEX10K] [DATA7,DATA6,DATA5,DATA4,DATA3,DATA2,DATA1,DATA0,ADDRESS5,ADDRESS4,ADDRESS3,ADDRESS2,ADDRESS1,ADDRESS0,INCLOCK,WE,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0];
			52 [USE_LPM_FOR_AHDL_OPERATORS=OFF,LPM_WIDTH=8,LPM_WIDTHAD=7,LPM_NUMWORDS=0,LPM_INDATA=REGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_OUTDATA=UNREGISTERED,LPM_FILE=NO_FILE,DEVICE_FAMILY=FLEX10K] [DATA7,DATA6,DATA5,DATA4,DATA3,DATA2,DATA1,DATA0,ADDRESS6,ADDRESS5,ADDRESS4,ADDRESS3,ADDRESS2,ADDRESS1,ADDRESS0,INCLOCK,WE,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0];
		}
	}
	altram.tdf
	{
		altram [USE_LPM_FOR_AHDL_OPERATORS,WIDTH,AD_WIDTH,NUMWORDS,FILE=NO_FILE,REGISTERINPUTMODE=DEFAULT,USE_EAB=ON,DEVICE_FAMILY] [aglobal.inc,lpm_mux.inc,lpm_decode.inc,memmodes.inc]
		{
			32 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=8,AD_WIDTH=7,NUMWORDS=128,FILE=NO_FILE,REGISTERINPUTMODE=ALL,USE_EAB=ON,DEVICE_FAMILY=FLEX10K] [ClockO,ClockI,Address0,Address1,Address2,Address3,Address4,Address5,Address6,Data0,Data1,Data2,Data3,Data4,Data5,Data6,Data7,WE,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7];
			51 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=8,AD_WIDTH=6,NUMWORDS=64,FILE=NO_FILE,REGISTERINPUTMODE=DATA,USE_EAB=ON,DEVICE_FAMILY=FLEX10K] [ClockI,Address0,Address1,Address2,Address3,Address4,Address5,Data0,Data1,Data2,Data3,Data4,Data5,Data6,Data7,WE,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7];
			53 [USE_LPM_FOR_AHDL_OPERATORS=OFF,WIDTH=8,AD_WIDTH=7,NUMWORDS=128,FILE=NO_FILE,REGISTERINPUTMODE=DATA,USE_EAB=ON,DEVICE_FAMILY=FLEX10K] [ClockI,Address0,Address1,Address2,Address3,Address4,Address5,Address6,Data0,Data1,Data2,Data3,Data4,Data5,Data6,Data7,WE,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7];
		}
	}
	CPU.vhd
	{
		CPU [] [U1147235.DLS,U7449008.DLS,U2043679.DLS]
		{
			0 [] [];
		}
	}
}
TREE
{
	cpu::(0,0):(0): CPU.vhd
	{
		pc:47:(137,5):(627,M0): pc.vhd
		{
			lpm_add_sub:2:(25,25):(160): lpm_add_sub.tdf
			{
				addcore:3:(212,4):(64,adder): addcore.tdf;
				altshift:4:(222,2):(101,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(127,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(135,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		ram:48:(149,5):(628,M1): ram.vhd
		{
			lpm_ram_dq:52:(16,13):(27,ram): lpm_ram_dq.tdf
			{
				altram:53:(74,5):(53,sram): altram.tdf;
			}
		}
		io:33:(154,5):(629,M2): io.vhd
		{
			scan_disp:34:(90,9):(8083,display): scan_disp.vhd
			{
				lpm_add_sub:35:(61,17):(162): lpm_add_sub.tdf
				{
					addcore:36:(212,4):(67,adder): addcore.tdf;
					altshift:37:(222,2):(107,result_ext_latency_ffs): altshift.tdf;
					altshift:5:(224,2):(135,carry_ext_latency_ffs): altshift.tdf;
					altshift:5:(226,2):(143,oflow_ext_latency_ffs): altshift.tdf;
				}
				yima_7seg:38:(31,8):(1378,disp): yima_7seg.vhd;
				count_6:39:(32,10):(1379,count1~70): count_6.vhd
				{
					lpm_add_sub:21:(18,25):(19): lpm_add_sub.tdf
					{
						addcore:22:(212,4):(43,adder): addcore.tdf;
						altshift:23:(222,2):(59,result_ext_latency_ffs): altshift.tdf;
						altshift:5:(224,2):(71,carry_ext_latency_ffs): altshift.tdf;
						altshift:5:(226,2):(79,oflow_ext_latency_ffs): altshift.tdf;
					}
				}
			}
		}
		acc:40:(170,5):(630,M3): acc.vhd;
		alu:41:(177,5):(631,M4): alu.vhd
		{
			lpm_add_sub:26:(15,1):(421): lpm_add_sub.tdf
			{
				addcore:27:(212,4):(61,adder): addcore.tdf;
				altshift:28:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
			lpm_add_sub:26:(15,1):(422): lpm_add_sub.tdf
			{
				addcore:27:(212,4):(61,adder): addcore.tdf;
				altshift:28:(222,2):(95,result_ext_latency_ffs): altshift.tdf;
				altshift:5:(224,2):(119,carry_ext_latency_ffs): altshift.tdf;
				altshift:5:(226,2):(127,oflow_ext_latency_ffs): altshift.tdf;
			}
		}
		rom:42:(186,9):(632,M5): rom.vhd
		{
			lpm_rom:30:(25,9):(44,M0): lpm_rom.tdf
			{
				altrom:31:(63,3):(54,srom): altrom.tdf;
			}
		}
		dec:43:(189,5):(633,M6): dec.vhd;
	}
}
